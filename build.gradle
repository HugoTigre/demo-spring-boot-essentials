plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'

    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'

    id "org.jetbrains.gradle.plugin.idea-ext" version "0.5"

    id 'com.palantir.jacoco-coverage' version '0.4.0'
    id "com.palantir.jacoco-full-report" version "0.4.0"
}

apply from: 'build-gatling.gradle'

ext {
    testContainer = '1.11.1'
    jUnit = '5.4.1'
    mockito = '2.23.4'
    swagger = '2.9.2'
}

group = 'com.pakybytes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // Admin
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // Documentation
    implementation "io.springfox:springfox-swagger-ui:$swagger"
    implementation "io.springfox:springfox-swagger2:$swagger"
    
    // Persistence
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'

    // Web
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.eclipse.jetty:jetty-webapp:9.4.14.v20181114')

    // UI
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // Json
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8')

    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    kapt("org.springframework.boot:spring-boot-configuration-processor")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1")

    // Tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testCompile("org.testcontainers:testcontainers:$testContainer")
    testCompile("org.testcontainers:junit-jupiter:$testContainer")
    testCompile("org.testcontainers:postgresql:$testContainer")

    testImplementation("org.junit.jupiter:junit-jupiter-api:$jUnit")
    testCompile("org.junit.jupiter:junit-jupiter-engine:$jUnit")

    testCompile("org.mockito:mockito-core:$mockito")
    testCompile("org.mockito:mockito-junit-jupiter:$mockito")
    testCompile('com.nhaarman:mockito-kotlin:1.6.0')
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

ext['junit-jupiter.version'] = jUnit // override spring dependency management


test {
    useJUnitPlatform() {
        excludeTags 'integration'
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        // outputs.upToDateWhen {false}
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    check.dependsOn it
    shouldRunAfter test
}


jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    
    afterEvaluate {
        getClassDirectories().setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: ['**/Main**'])
                })
        )
    }
}